<h4 id="nombreUsuario"></h4>

<form id="formulario">
<input type="text" name="mensaje" id="mensaje">
<input type="submit" value="ENVIAR">
</form>

<p id="chat"></p>

<script src="//cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/toastify-js"></script>
<script src="/socket.io/socket.io.js"></script>
<script>

    const socketClient = io()

    // elementos
    const nombreUsuario = document.getElementById('nombreUsuario')
    const formulario = document.getElementById('formulario')
    const inputMensaje = document.getElementById('mensaje')
    const chatParrafo = document.getElementById('chat')

    let usuario = null

    const validateEmail = (user) => {
        const re = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
        return re.test(user)
    };

    if (!usuario) {
    Swal.fire({
        title: 'BIENVENIDO',
        text: 'Ingresa tu usuario',
        input: 'text',
        inputValidator: (value) => {
        if (!value) {
            return 'Necesitas ingresar un usuario'
        }else{
            if (!validateEmail(value)){
                return "Debe ingresar un mail valido"
            }
        }
        },
    }).then((username) => {
        usuario = username.value
        nombreUsuario.innerText = usuario
        socketClient.emit('nuevoUsuario', usuario)
    })
    }

    formulario.onsubmit = (e) => {
    e.preventDefault()

    const info = {
        user: usuario,
        message: inputMensaje.value,
    }

    socketClient.emit('mensaje', info)
    inputMensaje.value = ''
    }

    /*socketClient.on('chat',infoMensajes=>{
        console.log(infoMensajes)

        const chatRender = infoMensajes.map(elem=>{
            return `<p><strong>${elem.user}: </strong>${elem.message}</p>`
        }).join(' ')
        chatParrafo.innerHTML = chatRender
    })*/

     socketClient.on('chat',chats=>{
        
        const chatRender = chats.map(elem=>{
            return `<p><strong>${elem.user}: </strong>${elem.message}</p>`
        }).join(' ')
        chatParrafo.innerHTML = chatRender
    })

    socketClient.on('broadcast',user=>{
        Toastify({
            text: `Ingreso ${user} al chat`,
            duration: 5000,
            position: 'right',
            style: {
                background: "linear-gradient(to right, #00b09b, #96c93d)",
            }
        }).showToast()
    })

</script>